#summary API Reference for Theme developers

= Introduction =

When creating your theme templates, certain php variables will be made available to you by Sweetcron.  This document tells you what those variables are.

= Config-Level Variables =

These variables enable you to get information about Sweetcron configuration such as the title of the lifestream etc.

=== $this->config->item('base_url') ===

Returns the full url of Sweetcron's base url

=== $this->config->item('lifestream_title') ===

Returns the title of the lifestream.

= Page-Level Variables =

These are variables that are available to individual theme pages.

=== $page_name ===

Returns the name of the current page (e.g. "Item Search" or "Items")

=== $popular_tags ===

An array of popular tags in your Sweetcron install.  Each tag object looks like this:

{{{
$tag->name //the human readable tag name
$tag->slug //the lowercase, alphanumeric slug to be used in tag searches
$tag->count //the total number of items with this tag
}}}

So you can use $popular_tags to create a lis of popular tags in your theme templates, like this:

{{{
<?php foreach ($popular_tags as $tag): ?>
<?php echo $tag->name?>
<?php endforeach; ?>
}}}

=== $tags ===

The same as above, except this array contains all available tags in your Sweetcron install.

=== $items ===

An array of item objects for the current page, whether you are on the index page, an item search page, an item tag page etc etc.  See $item Object documentation below for full API reference.  Usage example:

{{{
<?php foreach ($items as $item): ?>
<?php echo $item->get_title()?>
<?php endforeach; ?>
}}}

= The $item Object =

Each $item object contains all available data about that particular item.  For example if it came from flickr, it might contain the url to a photo.  If it came from youtube, it might contain the embed code for a video.  It is your challenge as the theme developer to elegantly show the user what is available in this item, and you can do this with the following simple methods.

=== $item->get_feed_id() ===

Returns the numeric feed id of the current item.


	{
		return $this->feed_id;	
	}

	function get_feed_title()
	{
		return $this->feed_title;	
	}

	function get_feed_icon()
	{
		return $this->feed_icon;	
	}

	function get_feed_url()
	{
		return $this->feed_url;	
	}

	function get_feed_data()
	{
		return $this->feed_data;	
	}

	function get_feed_status()
	{
		return $this->feed_status;	
	}

	function get_feed_domain()
	{
		return $this->feed_domain;	
	}

	function get_feed_class()
	{
		return $this->feed_class;	
	}

	//return item components
	function get_date()
	{
		return $this->item_date;	
	}

	function get_nice_date()
	{
		return $this->nice_date;	
	}

	function get_human_date()
	{
		return $this->human_date;	
	}

	function get_content()
	{
		return $this->item_content;	
	}
	
	function get_title()
	{
		return $this->item_title;	
	}

	function get_permalink()
	{
		return $this->item_permalink;	
	}

	function get_original_permalink()
	{
		return $this->item_original_permalink;	
	}

	function get_status()
	{
		return $this->item_status;	
	}

	function get_name()
	{
		return $this->item_name;	
	}

	function get_parent()
	{
		return $this->item_parent;	
	}

	function get_data()
	{
		return $this->item_data;	
	}
	
	//"has" conditionals for item data
	function has_content()
	{
		if (isset($this->item_content) && $this->item_content != '') {
			return true;	
		}
	}

	function has_permalink()
	{
		if (isset($this->item_permalink)) {
			return true;	
		}
	}

	function has_original_permalink()
	{
		if (isset($this->item_original_permalink)) {
			return true;	
		}
	}

	function has_video()
	{
		if (isset($this->item_data['video'])) {
			return true;	
		}
	}

	function has_audio()
	{
		if (isset($this->item_data['audio'])) {
			return true;	
		}
	}
	
	function has_image()
	{
		if (isset($this->item_data['image']) && !empty($this->item_data['image'])) {
			return true;	
		}
	}

	function has_tags()
	{
		if (isset($this->item_tags[0])) {
			return true;	
		}
	}

	function has_tag($query = NULL)
	{
		$query = strtolower($query);
		if (isset($this->item_tags[0])) {
			foreach ($this->item_tags as $tag) {
				if ($tag->slug == $query) {
					return true;	
				}
			}
		}
	}
	
	//get item data
	function get_video()
	{
		if ($this->has_video()) {
			return $this->item_data['video'];	
		}
	}

	function get_audio()
	{
		if ($this->has_audio()) {
			return $this->item_data['audio'];	
		}
	}

	function get_image()
	{
		if ($this->has_image()) {
			return $this->item_data['image'];	
		}
	}

	function get_tags()
	{
		if ($this->has_tags()) {
			return $this->item_tags;	
		} else {
			return array();	
		}